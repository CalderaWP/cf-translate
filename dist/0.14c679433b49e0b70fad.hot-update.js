webpackHotUpdate(0,{

/***/ 46:
/* exports provided: MUTATIONS */
/* exports used: MUTATIONS */
/*!***********************************!*\
  !*** ./client/store/mutations.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MUTATIONS; });\nvar maybeSetField = function maybeSetField(state) {\n\treturn state.fieldId && state.language ? state.form.fields[state.language][state.fieldId] : {};\n};\n\nvar MUTATIONS = {\n\tform: function form(state, value) {\n\t\tif ('string' == typeof value) {\n\t\t\tvalue = {\n\t\t\t\tID: value\n\t\t\t};\n\t\t}\n\t\tif (state.form.ID != value.ID) {\n\t\t\tstate.language = '';\n\t\t\tstate.fieldId = '';\n\t\t\tstate.field = {};\n\t\t}\n\t\tstate.form = Object.assign(state.form, value);\n\t\tif (state.form.hasOwnProperty('languages_named')) {\n\t\t\tstate.formLanguages = state.form.languages_named;\n\t\t} else {\n\t\t\tstate.formLanguages = {};\n\t\t}\n\t},\n\tformLanguages: function formLanguages(state, value) {\n\t\tstate.formLanguages = value;\n\t},\n\tlanguage: function language(state, value) {\n\t\tstate.language = value;\n\t\tstate.field = {};\n\t\tstate.fieldId = '';\n\t\tstate.fields = state.form.fields[state.language];\n\t},\n\tfieldId: function fieldId(state, value) {\n\t\tstate.fieldId = value;\n\n\t\tstate.field = state.fieldId && state.language ? state.form.fields[state.language][state.fieldId] : {};\n\t\tconsole.log(state.field);\n\t\tif (state.field.hasOwnProperty('option') && null !== state.field.option) {\n\t\t\tObject.getOwnPropertyNames(state.field.option).forEach(function (opt) {\n\t\t\t\tstate.field.option[opt] = {\n\t\t\t\t\toptCode: opt,\n\t\t\t\t\tlabel: state.field.option[opt]\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t},\n\tfieldValue: function fieldValue(state, value) {\n\t\tstate.form.fields[state.language][state.fieldId] = value;\n\t}\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2pvc2gvc2l0ZXMvd3AyL3d3dy9jb250ZW50L3BsdWdpbnMvY2YtdHJhbnNsYXRlL2NsaWVudC9zdG9yZS9tdXRhdGlvbnMuanMiXSwibmFtZXMiOlsibWF5YmVTZXRGaWVsZCIsInN0YXRlIiwiZmllbGRJZCIsImxhbmd1YWdlIiwiZm9ybSIsImZpZWxkcyIsIk1VVEFUSU9OUyIsInZhbHVlIiwiSUQiLCJmaWVsZCIsIk9iamVjdCIsImFzc2lnbiIsImhhc093blByb3BlcnR5IiwiZm9ybUxhbmd1YWdlcyIsImxhbmd1YWdlc19uYW1lZCIsImNvbnNvbGUiLCJsb2ciLCJvcHRpb24iLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiZm9yRWFjaCIsIm9wdCIsIm9wdENvZGUiLCJsYWJlbCIsImZpZWxkVmFsdWUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsSUFBTUEsZ0JBQWdCLFNBQWhCQSxhQUFnQixDQUFVQyxLQUFWLEVBQWlCO0FBQ3RDLFFBQU9BLE1BQU1DLE9BQU4sSUFBaUJELE1BQU1FLFFBQXZCLEdBQWtDRixNQUFNRyxJQUFOLENBQVdDLE1BQVgsQ0FBa0JKLE1BQU1FLFFBQXhCLEVBQWtDRixNQUFNQyxPQUF4QyxDQUFsQyxHQUFxRixFQUE1RjtBQUNBLENBRkQ7O0FBSU8sSUFBTUksWUFBWTtBQUN4QkYsS0FEd0IsZ0JBQ25CSCxLQURtQixFQUNiTSxLQURhLEVBQ1A7QUFDaEIsTUFBSSxZQUFZLE9BQVFBLEtBQXhCLEVBQStCO0FBQzlCQSxXQUFRO0FBQ1BDLFFBQUlEO0FBREcsSUFBUjtBQUdBO0FBQ0QsTUFBSU4sTUFBTUcsSUFBTixDQUFXSSxFQUFYLElBQWlCRCxNQUFNQyxFQUEzQixFQUErQjtBQUM5QlAsU0FBTUUsUUFBTixHQUFpQixFQUFqQjtBQUNBRixTQUFNQyxPQUFOLEdBQWdCLEVBQWhCO0FBQ0FELFNBQU1RLEtBQU4sR0FBYyxFQUFkO0FBQ0E7QUFDRFIsUUFBTUcsSUFBTixHQUFhTSxPQUFPQyxNQUFQLENBQWNWLE1BQU1HLElBQXBCLEVBQXlCRyxLQUF6QixDQUFiO0FBQ0EsTUFBSU4sTUFBTUcsSUFBTixDQUFXUSxjQUFYLENBQTJCLGlCQUEzQixDQUFKLEVBQW9EO0FBQ25EWCxTQUFNWSxhQUFOLEdBQXNCWixNQUFNRyxJQUFOLENBQVdVLGVBQWpDO0FBQ0EsR0FGRCxNQUVLO0FBQ0piLFNBQU1ZLGFBQU4sR0FBc0IsRUFBdEI7QUFDQTtBQUNELEVBbEJ1QjtBQW1CeEJBLGNBbkJ3Qix5QkFtQlZaLEtBbkJVLEVBbUJKTSxLQW5CSSxFQW1CRztBQUFFTixRQUFNWSxhQUFOLEdBQXNCTixLQUF0QjtBQUE2QixFQW5CbEM7QUFvQnhCSixTQXBCd0Isb0JBb0JmRixLQXBCZSxFQW9CVE0sS0FwQlMsRUFvQkg7QUFDcEJOLFFBQU1FLFFBQU4sR0FBaUJJLEtBQWpCO0FBQ0FOLFFBQU1RLEtBQU4sR0FBYyxFQUFkO0FBQ0FSLFFBQU1DLE9BQU4sR0FBZ0IsRUFBaEI7QUFDQUQsUUFBTUksTUFBTixHQUFlSixNQUFNRyxJQUFOLENBQVdDLE1BQVgsQ0FBa0JKLE1BQU1FLFFBQXhCLENBQWY7QUFFQSxFQTFCdUI7QUEyQnhCRCxRQTNCd0IsbUJBMkJoQkQsS0EzQmdCLEVBMkJUTSxLQTNCUyxFQTJCSDtBQUNwQk4sUUFBTUMsT0FBTixHQUFnQkssS0FBaEI7O0FBRUFOLFFBQU1RLEtBQU4sR0FBY1IsTUFBTUMsT0FBTixJQUFpQkQsTUFBTUUsUUFBdkIsR0FBa0NGLE1BQU1HLElBQU4sQ0FBV0MsTUFBWCxDQUFrQkosTUFBTUUsUUFBeEIsRUFBa0NGLE1BQU1DLE9BQXhDLENBQWxDLEdBQXFGLEVBQW5HO0FBQ0FhLFVBQVFDLEdBQVIsQ0FBWWYsTUFBTVEsS0FBbEI7QUFDQSxNQUFJUixNQUFNUSxLQUFOLENBQVlHLGNBQVosQ0FBMkIsUUFBM0IsS0FBd0MsU0FBU1gsTUFBTVEsS0FBTixDQUFZUSxNQUFqRSxFQUEwRTtBQUN6RVAsVUFBT1EsbUJBQVAsQ0FBNEJqQixNQUFNUSxLQUFOLENBQVlRLE1BQXhDLEVBQWlERSxPQUFqRCxDQUEwRCxlQUFPO0FBQ2hFbEIsVUFBTVEsS0FBTixDQUFZUSxNQUFaLENBQW1CRyxHQUFuQixJQUF5QjtBQUN4QkMsY0FBU0QsR0FEZTtBQUV4QkUsWUFBT3JCLE1BQU1RLEtBQU4sQ0FBWVEsTUFBWixDQUFtQkcsR0FBbkI7QUFGaUIsS0FBekI7QUFJQSxJQUxEO0FBT0E7QUFFRCxFQTFDdUI7QUEyQ3hCRyxXQTNDd0Isc0JBMkNidEIsS0EzQ2EsRUEyQ1BNLEtBM0NPLEVBMkNEO0FBQ3RCTixRQUFNRyxJQUFOLENBQVdDLE1BQVgsQ0FBa0JKLE1BQU1FLFFBQXhCLEVBQWtDRixNQUFNQyxPQUF4QyxJQUFtREssS0FBbkQ7QUFDQTtBQTdDdUIsQ0FBbEIiLCJmaWxlIjoiNDYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtYXliZVNldEZpZWxkID0gZnVuY3Rpb24gKHN0YXRlKSB7XG5cdHJldHVybiBzdGF0ZS5maWVsZElkICYmIHN0YXRlLmxhbmd1YWdlID8gc3RhdGUuZm9ybS5maWVsZHNbc3RhdGUubGFuZ3VhZ2VdW3N0YXRlLmZpZWxkSWRdIDoge307XG59O1xuXG5leHBvcnQgY29uc3QgTVVUQVRJT05TID0ge1xuXHRmb3JtKHN0YXRlLHZhbHVlKXtcblx0XHRpZiggJ3N0cmluZycgPT0gdHlwZW9mICB2YWx1ZSApe1xuXHRcdFx0dmFsdWUgPSB7XG5cdFx0XHRcdElEOiB2YWx1ZVxuXHRcdFx0fTtcblx0XHR9XG5cdFx0aWYoIHN0YXRlLmZvcm0uSUQgIT0gdmFsdWUuSUQgKXtcblx0XHRcdHN0YXRlLmxhbmd1YWdlID0gJyc7XG5cdFx0XHRzdGF0ZS5maWVsZElkID0gJyc7XG5cdFx0XHRzdGF0ZS5maWVsZCA9IHt9O1xuXHRcdH1cblx0XHRzdGF0ZS5mb3JtID0gT2JqZWN0LmFzc2lnbihzdGF0ZS5mb3JtLHZhbHVlKTtcblx0XHRpZiggc3RhdGUuZm9ybS5oYXNPd25Qcm9wZXJ0eSggJ2xhbmd1YWdlc19uYW1lZCcgKSApe1xuXHRcdFx0c3RhdGUuZm9ybUxhbmd1YWdlcyA9IHN0YXRlLmZvcm0ubGFuZ3VhZ2VzX25hbWVkO1xuXHRcdH1lbHNle1xuXHRcdFx0c3RhdGUuZm9ybUxhbmd1YWdlcyA9IHt9O1xuXHRcdH1cblx0fSxcblx0Zm9ybUxhbmd1YWdlcyhzdGF0ZSx2YWx1ZSApeyBzdGF0ZS5mb3JtTGFuZ3VhZ2VzID0gdmFsdWUgfSxcblx0bGFuZ3VhZ2Uoc3RhdGUsdmFsdWUpe1xuXHRcdHN0YXRlLmxhbmd1YWdlID0gdmFsdWU7XG5cdFx0c3RhdGUuZmllbGQgPSB7fTtcblx0XHRzdGF0ZS5maWVsZElkID0gJyc7XG5cdFx0c3RhdGUuZmllbGRzID0gc3RhdGUuZm9ybS5maWVsZHNbc3RhdGUubGFuZ3VhZ2VdO1xuXG5cdH0sXG5cdGZpZWxkSWQoc3RhdGUsIHZhbHVlKXtcblx0XHRzdGF0ZS5maWVsZElkID0gdmFsdWU7XG5cblx0XHRzdGF0ZS5maWVsZCA9IHN0YXRlLmZpZWxkSWQgJiYgc3RhdGUubGFuZ3VhZ2UgPyBzdGF0ZS5mb3JtLmZpZWxkc1tzdGF0ZS5sYW5ndWFnZV1bc3RhdGUuZmllbGRJZF0gOiB7fTtcblx0XHRjb25zb2xlLmxvZyhzdGF0ZS5maWVsZCk7XG5cdFx0aWYoIHN0YXRlLmZpZWxkLmhhc093blByb3BlcnR5KCdvcHRpb24nKSAmJiBudWxsICE9PSBzdGF0ZS5maWVsZC5vcHRpb24gICl7XG5cdFx0XHRPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyggc3RhdGUuZmllbGQub3B0aW9uICkuZm9yRWFjaCggb3B0ID0+IHtcblx0XHRcdFx0c3RhdGUuZmllbGQub3B0aW9uW29wdF0gPXtcblx0XHRcdFx0XHRvcHRDb2RlOiBvcHQsXG5cdFx0XHRcdFx0bGFiZWw6IHN0YXRlLmZpZWxkLm9wdGlvbltvcHRdXG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cdFx0fVxuXG5cdH0sXG5cdGZpZWxkVmFsdWUoc3RhdGUsdmFsdWUpe1xuXHRcdHN0YXRlLmZvcm0uZmllbGRzW3N0YXRlLmxhbmd1YWdlXVtzdGF0ZS5maWVsZElkXSA9IHZhbHVlO1xuXHR9XG5cbn07XG5cblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY2xpZW50L3N0b3JlL211dGF0aW9ucy5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ })

})