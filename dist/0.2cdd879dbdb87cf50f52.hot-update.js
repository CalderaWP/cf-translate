webpackHotUpdate(0,{

/***/ 17:
/* exports provided: default */
/* exports used: default */
/*!***************************************!*\
  !*** ./client/plugins/state/index.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__factories__ = __webpack_require__(/*! ./factories */ 43);\n\n\n/**\n * Container for factories that are created as need\n *\n * @type {{twoWay: {}, dispatching: {}, oneWay: {}}}\n */\nvar factories = {\n\ttwoWay: {},\n\tdispatching: {},\n\toneWay: {}\n\n};\n\n/**\n * Factory for creating lazy-loading state factories\n *\n * @param type {String} Type of factory\n * @param factory {Function} Callback function to create state factories with.\n * @returns {function(*=)}\n */\nvar factoryFactory = function factoryFactory(type, factory) {\n\treturn function (prop) {\n\t\tif (!factories[type].hasOwnProperty(prop)) {\n\t\t\tfactories[type][prop] = new factory(prop);\n\t\t}\n\t\treturn factories[type][prop];\n\t};\n};\n\n/** Create Factories **/\nvar twoWayFactory = factoryFactory('twoWay', __WEBPACK_IMPORTED_MODULE_0__factories__[\"a\" /* StateFactory */]);\nvar oneWayFactory = factoryFactory('oneWay', __WEBPACK_IMPORTED_MODULE_0__factories__[\"b\" /* StateFactoryReadOnly */]);\nvar dispatchingFactory = factoryFactory('dispatching', __WEBPACK_IMPORTED_MODULE_0__factories__[\"c\" /* StateFactoryDispatching */]);\n\n/**\n * The computed properties to be injected into all components\n *\n * @type {{}}\n */\nvar computed = {};\n\nvar stateComputes = {\n\ttwoWay: ['foo', 'fieldId', 'language', 'forms', 'saving', 'showAddLanguage', 'languages', 'showLanguageChoice', 'formLanguages', 'showChooser', formInfo],\n\toneWay: ['field'],\n\tdispatching: ['form']\n};\n\n/** Inject two-way bindings **/\nstateComputes.twoWay.forEach(function (key, i) {\n\tcomputed[key] = twoWayFactory(key, key);\n});\n\n/** Inject one-way bindings **/\nstateComputes.oneWay.forEach(function (key, i) {\n\tcomputed[key] = oneWayFactory(key, key);\n});\n\n/** Inject two-way, asynchronous bindings **/\nstateComputes.dispatching.forEach(function (key, i) {\n\tcomputed[key] = dispatchingFactory(key, key);\n});\n\n/**\n * Create plugin\n *\n * @type {{install: (function(*, *): void)}}\n */\nvar statePlugin = {\n\tinstall: function install(Vue, options) {\n\t\tVue.mixin({\n\t\t\tcomputed: computed\n\t\t});\n\t}\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = statePlugin;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2pvc2gvc2l0ZXMvY2YtZGV2L3dlYi93cC1jb250ZW50L3BsdWdpbnMvY2YtdHJhbnNsYXRlL2NsaWVudC9wbHVnaW5zL3N0YXRlL2luZGV4LmpzIl0sIm5hbWVzIjpbImZhY3RvcmllcyIsInR3b1dheSIsImRpc3BhdGNoaW5nIiwib25lV2F5IiwiZmFjdG9yeUZhY3RvcnkiLCJ0eXBlIiwiZmFjdG9yeSIsInByb3AiLCJoYXNPd25Qcm9wZXJ0eSIsInR3b1dheUZhY3RvcnkiLCJvbmVXYXlGYWN0b3J5IiwiZGlzcGF0Y2hpbmdGYWN0b3J5IiwiY29tcHV0ZWQiLCJzdGF0ZUNvbXB1dGVzIiwiZm9ybUluZm8iLCJmb3JFYWNoIiwia2V5IiwiaSIsInN0YXRlUGx1Z2luIiwiaW5zdGFsbCIsIlZ1ZSIsIm9wdGlvbnMiLCJtaXhpbiJdLCJtYXBwaW5ncyI6IjtBQUFBOztBQU1BOzs7OztBQUtBLElBQUlBLFlBQVk7QUFDZkMsU0FBUSxFQURPO0FBRWZDLGNBQWEsRUFGRTtBQUdmQyxTQUFROztBQUhPLENBQWhCOztBQU9BOzs7Ozs7O0FBT0EsSUFBTUMsaUJBQWlCLFNBQWpCQSxjQUFpQixDQUFFQyxJQUFGLEVBQVFDLE9BQVIsRUFBcUI7QUFDM0MsUUFBTyxVQUFFQyxJQUFGLEVBQVk7QUFDbEIsTUFBSyxDQUFFUCxVQUFXSyxJQUFYLEVBQWtCRyxjQUFsQixDQUFrQ0QsSUFBbEMsQ0FBUCxFQUFrRDtBQUNqRFAsYUFBV0ssSUFBWCxFQUFrQkUsSUFBbEIsSUFBMEIsSUFBSUQsT0FBSixDQUFZQyxJQUFaLENBQTFCO0FBQ0E7QUFDRCxTQUFPUCxVQUFXSyxJQUFYLEVBQWtCRSxJQUFsQixDQUFQO0FBQ0EsRUFMRDtBQU1BLENBUEQ7O0FBU0E7QUFDQSxJQUFNRSxnQkFBZ0JMLGVBQWdCLFFBQWhCLEVBQTBCLGdFQUExQixDQUF0QjtBQUNBLElBQU1NLGdCQUFnQk4sZUFBZ0IsUUFBaEIsRUFBMEIsd0VBQTFCLENBQXRCO0FBQ0EsSUFBTU8scUJBQXFCUCxlQUFnQixhQUFoQixFQUErQiwyRUFBL0IsQ0FBM0I7O0FBRUE7Ozs7O0FBS0EsSUFBSVEsV0FBVyxFQUFmOztBQUVBLElBQU1DLGdCQUFnQjtBQUNyQlosU0FBUSxDQUNQLEtBRE8sRUFFUCxTQUZPLEVBR1AsVUFITyxFQUlQLE9BSk8sRUFLUCxRQUxPLEVBTVAsaUJBTk8sRUFPUCxXQVBPLEVBUVAsb0JBUk8sRUFTUCxlQVRPLEVBVVAsYUFWTyxFQVdQYSxRQVhPLENBRGE7QUFjckJYLFNBQVEsQ0FDUCxPQURPLENBZGE7QUFpQnJCRCxjQUFhLENBQ1osTUFEWTtBQWpCUSxDQUF0Qjs7QUFzQkE7QUFDQVcsY0FBY1osTUFBZCxDQUFxQmMsT0FBckIsQ0FBOEIsVUFBQ0MsR0FBRCxFQUFLQyxDQUFMLEVBQVc7QUFDeENMLFVBQVNJLEdBQVQsSUFBZ0JQLGNBQWVPLEdBQWYsRUFBb0JBLEdBQXBCLENBQWhCO0FBQ0EsQ0FGRDs7QUFJQTtBQUNBSCxjQUFjVixNQUFkLENBQXFCWSxPQUFyQixDQUE4QixVQUFDQyxHQUFELEVBQUtDLENBQUwsRUFBVztBQUN4Q0wsVUFBU0ksR0FBVCxJQUFnQk4sY0FBZU0sR0FBZixFQUFvQkEsR0FBcEIsQ0FBaEI7QUFDQSxDQUZEOztBQUlBO0FBQ0FILGNBQWNYLFdBQWQsQ0FBMEJhLE9BQTFCLENBQW1DLFVBQUNDLEdBQUQsRUFBS0MsQ0FBTCxFQUFXO0FBQzdDTCxVQUFTSSxHQUFULElBQWdCTCxtQkFBb0JLLEdBQXBCLEVBQXlCQSxHQUF6QixDQUFoQjtBQUNBLENBRkQ7O0FBSUE7Ozs7O0FBS0EsSUFBTUUsY0FBYztBQUNuQkMsUUFEbUIsbUJBQ1hDLEdBRFcsRUFDTkMsT0FETSxFQUNHO0FBQ3JCRCxNQUFJRSxLQUFKLENBQVU7QUFDVFYsYUFBVUE7QUFERCxHQUFWO0FBR0E7QUFMa0IsQ0FBcEI7O0FBUUEsd0RBQWVNLFdBQWYiLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgIHtcblx0U3RhdGVGYWN0b3J5LFxuXHRTdGF0ZUZhY3RvcnlSZWFkT25seSxcblx0U3RhdGVGYWN0b3J5RGlzcGF0Y2hpbmdcbn0gZnJvbSAnLi9mYWN0b3JpZXMnO1xuXG4vKipcbiAqIENvbnRhaW5lciBmb3IgZmFjdG9yaWVzIHRoYXQgYXJlIGNyZWF0ZWQgYXMgbmVlZFxuICpcbiAqIEB0eXBlIHt7dHdvV2F5OiB7fSwgZGlzcGF0Y2hpbmc6IHt9LCBvbmVXYXk6IHt9fX1cbiAqL1xubGV0IGZhY3RvcmllcyA9IHtcblx0dHdvV2F5OiB7fSxcblx0ZGlzcGF0Y2hpbmc6IHt9LFxuXHRvbmVXYXk6IHt9LFxuXG59O1xuXG4vKipcbiAqIEZhY3RvcnkgZm9yIGNyZWF0aW5nIGxhenktbG9hZGluZyBzdGF0ZSBmYWN0b3JpZXNcbiAqXG4gKiBAcGFyYW0gdHlwZSB7U3RyaW5nfSBUeXBlIG9mIGZhY3RvcnlcbiAqIEBwYXJhbSBmYWN0b3J5IHtGdW5jdGlvbn0gQ2FsbGJhY2sgZnVuY3Rpb24gdG8gY3JlYXRlIHN0YXRlIGZhY3RvcmllcyB3aXRoLlxuICogQHJldHVybnMge2Z1bmN0aW9uKCo9KX1cbiAqL1xuY29uc3QgZmFjdG9yeUZhY3RvcnkgPSAoIHR5cGUsIGZhY3RvcnkgKSA9PiB7XG5cdHJldHVybiAoIHByb3AgKSA9PiB7XG5cdFx0aWYgKCAhIGZhY3Rvcmllc1sgdHlwZSBdLmhhc093blByb3BlcnR5KCBwcm9wICkgKSB7XG5cdFx0XHRmYWN0b3JpZXNbIHR5cGUgXVtwcm9wXSA9IG5ldyBmYWN0b3J5KHByb3ApO1xuXHRcdH1cblx0XHRyZXR1cm4gZmFjdG9yaWVzWyB0eXBlIF1bcHJvcF1cblx0fTtcbn07XG5cbi8qKiBDcmVhdGUgRmFjdG9yaWVzICoqL1xuY29uc3QgdHdvV2F5RmFjdG9yeSA9IGZhY3RvcnlGYWN0b3J5KCAndHdvV2F5JywgU3RhdGVGYWN0b3J5ICk7XG5jb25zdCBvbmVXYXlGYWN0b3J5ID0gZmFjdG9yeUZhY3RvcnkoICdvbmVXYXknLCBTdGF0ZUZhY3RvcnlSZWFkT25seSApO1xuY29uc3QgZGlzcGF0Y2hpbmdGYWN0b3J5ID0gZmFjdG9yeUZhY3RvcnkoICdkaXNwYXRjaGluZycsIFN0YXRlRmFjdG9yeURpc3BhdGNoaW5nICk7XG5cbi8qKlxuICogVGhlIGNvbXB1dGVkIHByb3BlcnRpZXMgdG8gYmUgaW5qZWN0ZWQgaW50byBhbGwgY29tcG9uZW50c1xuICpcbiAqIEB0eXBlIHt7fX1cbiAqL1xubGV0IGNvbXB1dGVkID0ge307XG5cbmNvbnN0IHN0YXRlQ29tcHV0ZXMgPSB7XG5cdHR3b1dheTogW1xuXHRcdCdmb28nLFxuXHRcdCdmaWVsZElkJyxcblx0XHQnbGFuZ3VhZ2UnLFxuXHRcdCdmb3JtcycsXG5cdFx0J3NhdmluZycsXG5cdFx0J3Nob3dBZGRMYW5ndWFnZScsXG5cdFx0J2xhbmd1YWdlcycsXG5cdFx0J3Nob3dMYW5ndWFnZUNob2ljZScsXG5cdFx0J2Zvcm1MYW5ndWFnZXMnLFxuXHRcdCdzaG93Q2hvb3NlcicsXG5cdFx0Zm9ybUluZm9cblx0XSxcblx0b25lV2F5OiBbXG5cdFx0J2ZpZWxkJ1xuXHRdLFxuXHRkaXNwYXRjaGluZzogW1xuXHRcdCdmb3JtJyxcblx0XVxufTtcblxuLyoqIEluamVjdCB0d28td2F5IGJpbmRpbmdzICoqL1xuc3RhdGVDb21wdXRlcy50d29XYXkuZm9yRWFjaCggKGtleSxpKSA9PiB7XG5cdGNvbXB1dGVkW2tleV0gPSB0d29XYXlGYWN0b3J5KCBrZXksIGtleSApO1xufSk7XG5cbi8qKiBJbmplY3Qgb25lLXdheSBiaW5kaW5ncyAqKi9cbnN0YXRlQ29tcHV0ZXMub25lV2F5LmZvckVhY2goIChrZXksaSkgPT4ge1xuXHRjb21wdXRlZFtrZXldID0gb25lV2F5RmFjdG9yeSgga2V5LCBrZXkgKTtcbn0pO1xuXG4vKiogSW5qZWN0IHR3by13YXksIGFzeW5jaHJvbm91cyBiaW5kaW5ncyAqKi9cbnN0YXRlQ29tcHV0ZXMuZGlzcGF0Y2hpbmcuZm9yRWFjaCggKGtleSxpKSA9PiB7XG5cdGNvbXB1dGVkW2tleV0gPSBkaXNwYXRjaGluZ0ZhY3RvcnkoIGtleSwga2V5ICk7XG59KTtcblxuLyoqXG4gKiBDcmVhdGUgcGx1Z2luXG4gKlxuICogQHR5cGUge3tpbnN0YWxsOiAoZnVuY3Rpb24oKiwgKik6IHZvaWQpfX1cbiAqL1xuY29uc3Qgc3RhdGVQbHVnaW4gPSB7XG5cdGluc3RhbGwoVnVlLCBvcHRpb25zKSB7XG5cdFx0VnVlLm1peGluKHtcblx0XHRcdGNvbXB1dGVkOiBjb21wdXRlZFxuXHRcdH0pO1xuXHR9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBzdGF0ZVBsdWdpbjtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jbGllbnQvcGx1Z2lucy9zdGF0ZS9pbmRleC5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ })

})